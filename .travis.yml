language: bash # Cannot use android for kvm
sudo: true
dist: bionic # Bionic is needed for KVM Nested Virtualization
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - "${TRAVIS_BUILD_DIR}/gradle/caches/"
  - "${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/"
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/.android/build-cache
env:
  global:
  - API_LEVEL=28
  - ANDROID_EMULATOR_API_LEVEL=29
  - ANDROID_BUILD_TOOLS_VERSION=28.0.3
  - ANDROID_ABI=x86_64
  - ANDROID_FLAVOUR=google_apis # Use default for non-google
  - ADB_INSTALL_TIMEOUT=20
  - ANDROID_TARGET=android-25
  - ANDROID_TAG=google_apis
  - DISCORD_URL=https://raw.githubusercontent.com/itachi1706/travis-ci-discord-webhook/master/send.sh
  # KVM Self setup of Android SDK
  - ANDROID_HOME=${HOME}/android-sdk # Default location for SDK
  - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip" # From Android Dev Site
  - JDK="1.8" # Android JDK
  - TOOLS=${ANDROID_HOME}/tools # SDK Tools Location
  - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
  - ESPRESSO=1
before_install:
  - mkdir travisscript

  # Setup Android SDK JDK
  - export TARGET_JDK="${JDK}"
  - JDK="1.8"
  - wget -q "https://raw.githubusercontent.com/itachi1706/Travis-CI-Scripts/master/install-jdk-travis.sh" -O travisscript/install-jdk-travis.sh
  - chmod +x ./travisscript/install-jdk-travis.sh
  - source ./travisscript/install-jdk-travis.sh

  # Setup Android SDK
  - wget -q "${ANDROID_TOOLS_URL}" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - mkdir -p ~/.android
  - echo 'count=0' > ~/.android/repositories.cfg
  - yes | sdkmanager --licenses >/dev/null
  - yes | sdkmanager "platform-tools" >/dev/null
  - yes | sdkmanager "tools" >/dev/null
  - yes | sdkmanager "build-tools;$ANDROID_BUILD_TOOLS_VERSION" >/dev/null
  - yes | sdkmanager "platforms;android-$API_LEVEL" >/dev/null # Current Android compileSDK
install:
  # Download Emulator Files
  - if [ $ESPRESSO -eq 1 ]; then yes | sdkmanager "platforms;android-$ANDROID_EMULATOR_API_LEVEL" >/dev/null; fi # Android Emulator Platform
  - if [ $ESPRESSO -eq 1 ]; then yes | sdkmanager "emulator" >/dev/null; fi
  - if [ $ESPRESSO -eq 1 ]; then yes | sdkmanager "system-images;android-$ANDROID_EMULATOR_API_LEVEL;$ANDROID_FLAVOUR;$ANDROID_ABI" >/dev/null; fi # Android Emulator Image

  # Setup Linux KVM
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm

  # Launch Android Emulator
  - if [ $ESPRESSO -eq 1 ]; then avdmanager list; fi
  - wget -q "https://raw.githubusercontent.com/itachi1706/Travis-CI-Scripts/master/android-wait-for-emulator.sh" -O travisscript/android-wait-for-emulator.sh
  - wget -q "https://raw.githubusercontent.com/itachi1706/Travis-CI-Scripts/master/startemu.sh" -O travisscript/startemu.sh
  - chmod +x ./travisscript/startemu.sh
  - chmod +x ./travisscript/android-wait-for-emulator.sh
  - ./travisscript/startemu.sh

  # Switch back to target JDK
  - JDK="${TARGET_JDK}"
  - source ./travisscript/install-jdk-travis.sh
before_script:
  - openssl aes-256-cbc -K $encrypted_cec42bb3ef77_key -iv $encrypted_cec42bb3ef77_iv -in google-services.json.enc -out app/google-services.json -d
  - chmod +x gradlew
  #- ./gradlew clean # Uncomment to clean cache
  - travis_retry ./gradlew assembleDebug
  - travis_retry ./gradlew assembleDebugAndroidTest
script: travis_retry travis_wait ./gradlew connectedAndroidTest -x assembleDebug -x assembleDebugAndroidTest
after_success:
- mv ./app/build/outputs/apk/debug/app-debug.apk ./app/build/outputs/apk/debug/SingBuses-debug.apk
- ls ./app/build/outputs/apk/
- ls ./app/build/outputs/apk/debug/
- wget $DISCORD_URL
- chmod +x send.sh
- ./send.sh success $WEBHOOK_URL
after_failure:
- cat $TRAVIS_BUILD_DIR/app/build/outputs/lint-results-debug.xml
- wget $DISCORD_URL
- chmod +x send.sh
- ./send.sh failure $WEBHOOK_URL
deploy:
  provider: releases
  api_key: "$OAUTH_KEY"
  file: "./app/build/outputs/apk/debug/SingBuses-debug.apk"
  skip_cleanup: true
  on:
    tags: true
notifications:
  irc:
    channels:
    - chat.freenode.net#itachi1706mc
    - irc.esper.net#itachi1706
    on_success: always
    on_failure: always
    template:
    - "%{repository}#%{build_number} (%{branch} - %{commit} : %{author}): %{commit_subject}"
    - 'Build Status : %{message}'
    - 'Change view : %{compare_url}'
    - 'Build details : %{build_url}'
  email:
    recipients:
    - "$PRIVATE_EMAIL"
    on_success: change
    on_failure: always
  slack:
    secure: hoZqAanIUu6B/i7tCc8BX9DKHmc2ERJZTVzxrwRZ3lkD5L/AP7tVHQmkPgF0Y1pf6cDBdc4yVTZjQWb8WU2fsFjjje3cswb7RIjsy8/BxKZ7jgN1AhZCNI54efcl46mRZjyNVL9QF2nb089F2+7uauxD381aTewNgaQrwHnuQF0KtIyCIyAlyMUURjP8T5bxj0w64NUDgUKS6ps1D8R5VnKZxViMthhswZN2R5uDPW1/gT+XLnYm1fmPByWPeePGv7GlIZE6XgllpUhPLibLLTeLhiyEpvKTb8pclQdTVCZs9llprNN56c6drMigioCJJ7P6dPLRZifGXJdZ9+BtupvKZ9JhHUALp+cclqP6A5XUQAaabQVHgwSuCRspnjKhf/sLotIG0rCH7btNljugnHcyam6/jTjkpQ0EWvryKhZwMhXcq+BpCk5xwPz4ki0QytCgISa9W5Ww74dpGotxtRiU2IacpLbNtXSU1RRa1JqbySDSiuJ5wFvPx4tDbrW/OVzdMl5ZIiDuQLM4OHKeZjI8xrhOUFakUziKNkt0enxdrBiaFSB5CLUdxVTo4Idd1sFccBpl9MhzJ4Nf3flJ9q83hSaJHeZAGcoQFW+4VwODptnQR7AR8RWCzB/515tOeYqfoEWStF0Tt1F1ZrZ3tPG45UsWXeyFIli2Twd7u4I=
